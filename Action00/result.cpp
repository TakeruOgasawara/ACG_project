//===========================================================================================
//
// リザルト画面[title.cpp]
// Author : Takeru Ogasawara
//
//===========================================================================================
#include "result.h"
#include "manager.h"
#include "renderer.h"
#include "debugproc.h"
#include "input.h"
#include "object2D.h"
#include "texture.h"
#include "fade.h"

//静的メンバ変数宣言
int CResult::m_nTextureIdx = 0;
CObject2D *CResult::m_pObject2D = nullptr;

//===========================================================================================
// コンストラクタ
//===========================================================================================
CResult::CResult()
{
	
}

//===========================================================================================
// デストラクタ
//===========================================================================================
CResult::~CResult()
{

}

//===========================================================================================
// テクスチャ読み込み
//===========================================================================================
HRESULT CResult::Load(void)
{
	CTexture *pTexture = CManager::GetTexture();

	//テクスチャ
	m_nTextureIdx = pTexture->Regist("data\\TEXTURE\\result-1.png");

	return S_OK;
}

//===========================================================================================
// 初期化処理
//===========================================================================================
HRESULT CResult::Init()
{
	Load();

	m_pObject2D = CObject2D::Create(3);

	m_pObject2D->SetSize_center(640.0f, 360.0f);

	m_pObject2D->BindTexture(m_nTextureIdx);

	return S_OK;
}

//===========================================================================================
// 終了処理
//===========================================================================================
void CResult::Uninit()
{
	
}

//===========================================================================================
// 更新処理
//===========================================================================================
void CResult::Update()
{
	CInputKeyboard *pInputKey = CManager::GetInputKeyboard();
	CInputJoyPad *pJoyPad = CManager::GetInputJoyPad();

	if (pInputKey->GetTrigger(DIK_RETURN) || pJoyPad->GetTrigger(pJoyPad->BUTTON_A, 0))
	{
		CManager::GetFade()->Set(MODE_TITLE);
	}

	CScene::Update();
}

//===========================================================================================
// 描画処理
//===========================================================================================
void CResult::Draw()
{
	CScene::Draw();
}

